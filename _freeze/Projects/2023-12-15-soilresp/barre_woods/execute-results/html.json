{
  "hash": "55a51bff6017f12abfe3d9ebf972640b",
  "result": {
    "markdown": "---\ntitle: 'Does global warming affect soil respiration?'\ndescription: 'Evaluating data from the Harvard Forest LTER soil warming experiment to simulate global climate change'\nauthor: \"Flora Hamilton\"\ndate: \"2022-12-15\"\ncode-fold: true \ntoc: true\noutput:\n    html_document:\n      print_df: paged\n      toc: yes\n      toc_depth: 4\n      toc_float: yes\ndraft: false\n---\n\n\n![](images/Screenshot%202023-12-15%20at%209.26.16%20AM.png)\n\n*What effect does soil warming have on monthly average respiration rates?*\n\n# Background:\n\nThe Intergovernmental Panel on Climate Change (IPCC)'s AR6 report published in August, 2021 projects that the world will likely reach or exceed 1.5 degrees C (2.7 degrees F) of warming within the next two decades [\\[1\\]](https://www.wri.org/insights/ipcc-climate-report). Under these circumstances, preserving soil health will be evermore important. Soil respiration, or \"carbon flux,\" plays a significant role in soil health and the global carbon and nutrient cycles, and can be considered the \"vitality\" of the soil, as it is an indicator of microbial activity and the content and decomposition of soil organic matter. Carbon flux is measured as the rate of carbon dioxide released from the soil by microbes decomposing soil organic matter and from the respiration of plant roots, in units of micromoles of CO2 per meter squared, per second.\n\nThe Harvard Forest LTER (Long Term Ecological Research) station has been \"examining ecological dynamics in the New England region resulting from natural disturbances, environmental change, and human impacts\" since the early 1990's [\\[2\\]](https://portal.edirepository.org/nis/metadataviewer?packageid=knb-lter-hfr.18.34). One of their main focuses is studying the effects of soil warming on soil respiration, nutrient availbility, carbon sequestration, and other ecoystemic factors impacted by global warming.\n\nOne of its most important research findings is that soil respiration is also a driver for, and thus associated with, positive feedback with global climate change \\[[3](https://harvardforest.fas.harvard.edu/news/results-20-year-soil-warming-experiment)\\]. To arrive at this conclusion, the researchers designated control and temperature-treated plots of soil, maintaining soil temperatures at 5¬∞C above ambient levels via hot wires running underneath the soil surface, at three replicated sites [\\[4\\]](https://harvardforest.fas.harvard.edu/soil-warming-experiment).\n\nWhile these research findings have been formalized by the studies' scientists, I would like to better understand the relationship between soil warming and soil respiration for myself by applying hypothesis testing and linear regression, using the data from the Barre Woods site to evaluate changes of carbon flux based on differences in soil temperature and soil moisture.\n\n# The Data\n\nThe data used in this project was retrieved from [this EDI Portal](https://portal.edirepository.org/nis/mapbrowse?scope=knb-lter-hfr&identifier=18&revision=34), with a temporal range of 2001 to 2019\n\nüå°Ô∏è **Soil temperature data** ([Explore data here and sampling methods here](https://dex.edirepository.org/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fdata%2Feml%2Fknb-lter-hfr%2F18%2F34%2F326d32c64ccd7337a0f88b91db895e55))\n\nThe EDI Portal provides R code to assist with the data wrangling. This is the code chunk I used for reading in the file & performing preliminary cleaning.\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(feasts)\nlibrary(ggplot2)\nlibrary(moderndive)\nlibrary(dplyr)\nlibrary(gridExtra)\n\n\n# reading in temperature data \ninfile3 <- trimws(\"https://pasta.lternet.edu/package/data/eml/knb-lter-hfr/18/34/9967b5716716078674fdd9755f9d5f1f\") \ninfile3 <-sub(\"^https\",\"http\",infile3)\n# This creates a tibble named: dt3 \n\tdt3 <-read_delim(infile3  \n                ,delim=\",\"   \n                ,skip=1 \n                    , col_names=c( \n                        \"datetime\",   \n                        \"doy\",   \n                        \"year\",   \n                        \"time\",   \n                        \"ctrl.av\",   \n                        \"p1.av\",   \n                        \"p2.av\",   \n                        \"p3.av\",   \n                        \"p4.av\",   \n                        \"p5.av\",   \n                        \"p6.av\",   \n                        \"p7.av\",   \n                        \"p8.av\",   \n                        \"p9.av\",   \n                        \"p10.av\"   ), \n                    col_types=list( \n                        col_datetime(\"%Y-%m-%dT%H:%M\"), \n                                    \n                        col_number() , \n                        col_character(),  \n                        col_character(), \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() , \n                        col_number() ), \n                        na=c(\" \",\".\",\"NA\",\"\")  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n```{.r .cell-code}\n# Convert Missing Values to NA for individual vectors \ndt3$datetime <- ifelse((trimws(as.character(dt3$datetime))==trimws(\"NA\")),NA,dt3$datetime)               \nsuppressWarnings(dt3$datetime <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$datetime))==as.character(as.numeric(\"NA\"))),NA,dt3$datetime))\ndt3$doy <- ifelse((trimws(as.character(dt3$doy))==trimws(\"NA\")),NA,dt3$doy)               \nsuppressWarnings(dt3$doy <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$doy))==as.character(as.numeric(\"NA\"))),NA,dt3$doy))\ndt3$year <- ifelse((trimws(as.character(dt3$year))==trimws(\"NA\")),NA,dt3$year)               \nsuppressWarnings(dt3$year <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$year))==as.character(as.numeric(\"NA\"))),NA,dt3$year))\ndt3$time <- ifelse((trimws(as.character(dt3$time))==trimws(\"NA\")),NA,dt3$time)               \nsuppressWarnings(dt3$time <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$time))==as.character(as.numeric(\"NA\"))),NA,dt3$time))\ndt3$ctrl.av <- ifelse((trimws(as.character(dt3$ctrl.av))==trimws(\"NA\")),NA,dt3$ctrl.av)               \nsuppressWarnings(dt3$ctrl.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$ctrl.av))==as.character(as.numeric(\"NA\"))),NA,dt3$ctrl.av))\ndt3$p1.av <- ifelse((trimws(as.character(dt3$p1.av))==trimws(\"NA\")),NA,dt3$p1.av)               \nsuppressWarnings(dt3$p1.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p1.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p1.av))\ndt3$p2.av <- ifelse((trimws(as.character(dt3$p2.av))==trimws(\"NA\")),NA,dt3$p2.av)               \nsuppressWarnings(dt3$p2.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p2.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p2.av))\ndt3$p3.av <- ifelse((trimws(as.character(dt3$p3.av))==trimws(\"NA\")),NA,dt3$p3.av)               \nsuppressWarnings(dt3$p3.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p3.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p3.av))\ndt3$p4.av <- ifelse((trimws(as.character(dt3$p4.av))==trimws(\"NA\")),NA,dt3$p4.av)               \nsuppressWarnings(dt3$p4.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p4.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p4.av))\ndt3$p5.av <- ifelse((trimws(as.character(dt3$p5.av))==trimws(\"NA\")),NA,dt3$p5.av)               \nsuppressWarnings(dt3$p5.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p5.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p5.av))\ndt3$p6.av <- ifelse((trimws(as.character(dt3$p6.av))==trimws(\"NA\")),NA,dt3$p6.av)               \nsuppressWarnings(dt3$p6.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p6.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p6.av))\ndt3$p7.av <- ifelse((trimws(as.character(dt3$p7.av))==trimws(\"NA\")),NA,dt3$p7.av)               \nsuppressWarnings(dt3$p7.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p7.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p7.av))\ndt3$p8.av <- ifelse((trimws(as.character(dt3$p8.av))==trimws(\"NA\")),NA,dt3$p8.av)               \nsuppressWarnings(dt3$p8.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p8.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p8.av))\ndt3$p9.av <- ifelse((trimws(as.character(dt3$p9.av))==trimws(\"NA\")),NA,dt3$p9.av)               \nsuppressWarnings(dt3$p9.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p9.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p9.av))\ndt3$p10.av <- ifelse((trimws(as.character(dt3$p10.av))==trimws(\"NA\")),NA,dt3$p10.av)               \nsuppressWarnings(dt3$p10.av <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt3$p10.av))==as.character(as.numeric(\"NA\"))),NA,dt3$p10.av))\n                  \nsoiltemp_df <- dt3\n```\n:::\n\n\n**üíß üí® Soil respiration + moisture data** ([Explore data and sampling methods here](https://dex.edirepository.org/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fdata%2Feml%2Fknb-lter-hfr%2F18%2F34%2F6f307eb9dfd8291d8826d69d73c18d27)):\n\nReading in file & cleaning.\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\ninUrl7  <- \"https://pasta.lternet.edu/package/data/eml/knb-lter-hfr/18/33/6f307eb9dfd8291d8826d69d73c18d27\" \ninfile7 <- tempfile()\ntry(download.file(inUrl7,infile7,method=\"curl\"))\nif (is.na(file.size(infile7))) download.file(inUrl7,infile7,method=\"auto\")\n\n\n\ndt7 <-read.csv(infile7,header=F \n          ,skip=1\n            ,sep=\",\"  \n        , col.names=c(\n                    \"datetime\",     \n                    \"date\",     \n                    \"year\",     \n                    \"month\",     \n                    \"day\",     \n                    \"time\",     \n                    \"treatment\",     \n                    \"plot\",     \n                    \"co2\",     \n                    \"cm2\",     \n                    \"cm4\",     \n                    \"moisture\",     \n                    \"measurement\"    ), check.names=TRUE)\n               \nunlink(infile7)\n\t\t    \n# Fix any interval or ratio columns mistakenly read in as nominal and nominal columns read as numeric or dates read as strings\n                \nif (class(dt7$datetime)!=\"factor\") dt7$datetime<- as.factor(dt7$datetime)                                   \n# attempting to convert dt7$date dateTime string to R date structure (date or POSIXct)                                \ntmpDateFormat<-\"%Y-%m-%d\"\ntmp7date<-as.Date(dt7$date,format=tmpDateFormat)\n# Keep the new dates only if they all converted correctly\nif(length(tmp7date) == length(tmp7date[!is.na(tmp7date)])){dt7$date <- tmp7date } else {print(\"Date conversion failed for dt7$date. Please inspect the data and do the date conversion yourself.\")}                                                                    \nrm(tmpDateFormat,tmp7date) \nif (class(dt7$month)!=\"factor\") dt7$month<- as.factor(dt7$month)\nif (class(dt7$day)!=\"factor\") dt7$day<- as.factor(dt7$day)\nif (class(dt7$treatment)!=\"factor\") dt7$treatment<- as.factor(dt7$treatment)\nif (class(dt7$plot)!=\"factor\") dt7$plot<- as.factor(dt7$plot)\nif (class(dt7$co2)==\"factor\") dt7$co2 <-as.numeric(levels(dt7$co2))[as.integer(dt7$co2) ]               \nif (class(dt7$co2)==\"character\") dt7$co2 <-as.numeric(dt7$co2)\nif (class(dt7$cm2)==\"factor\") dt7$cm2 <-as.numeric(levels(dt7$cm2))[as.integer(dt7$cm2) ]               \nif (class(dt7$cm2)==\"character\") dt7$cm2 <-as.numeric(dt7$cm2)\nif (class(dt7$cm4)==\"factor\") dt7$cm4 <-as.numeric(levels(dt7$cm4))[as.integer(dt7$cm4) ]               \nif (class(dt7$cm4)==\"character\") dt7$cm4 <-as.numeric(dt7$cm4)\nif (class(dt7$moisture)==\"factor\") dt7$moisture <-as.numeric(levels(dt7$moisture))[as.integer(dt7$moisture) ]               \nif (class(dt7$moisture)==\"character\") dt7$moisture <-as.numeric(dt7$moisture)\nif (class(dt7$measurement)!=\"factor\") dt7$measurement<- as.factor(dt7$measurement)\n                \n# Convert Missing Values to NA for non-dates\n                \ndt7$datetime <- as.factor(ifelse((trimws(as.character(dt7$datetime))==trimws(\"NA\")),NA,as.character(dt7$datetime)))\ndt7$month <- as.factor(ifelse((trimws(as.character(dt7$month))==trimws(\"NA\")),NA,as.character(dt7$month)))\ndt7$day <- as.factor(ifelse((trimws(as.character(dt7$day))==trimws(\"NA\")),NA,as.character(dt7$day)))\ndt7$treatment <- as.factor(ifelse((trimws(as.character(dt7$treatment))==trimws(\"NA\")),NA,as.character(dt7$treatment)))\ndt7$plot <- as.factor(ifelse((trimws(as.character(dt7$plot))==trimws(\"NA\")),NA,as.character(dt7$plot)))\ndt7$co2 <- ifelse((trimws(as.character(dt7$co2))==trimws(\"NA\")),NA,dt7$co2)               \nsuppressWarnings(dt7$co2 <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt7$co2))==as.character(as.numeric(\"NA\"))),NA,dt7$co2))\ndt7$cm2 <- ifelse((trimws(as.character(dt7$cm2))==trimws(\"NA\")),NA,dt7$cm2)               \nsuppressWarnings(dt7$cm2 <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt7$cm2))==as.character(as.numeric(\"NA\"))),NA,dt7$cm2))\ndt7$cm4 <- ifelse((trimws(as.character(dt7$cm4))==trimws(\"NA\")),NA,dt7$cm4)               \nsuppressWarnings(dt7$cm4 <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt7$cm4))==as.character(as.numeric(\"NA\"))),NA,dt7$cm4))\ndt7$moisture <- ifelse((trimws(as.character(dt7$moisture))==trimws(\"NA\")),NA,dt7$moisture)               \nsuppressWarnings(dt7$moisture <- ifelse(!is.na(as.numeric(\"NA\")) & (trimws(as.character(dt7$moisture))==as.character(as.numeric(\"NA\"))),NA,dt7$moisture))\ndt7$measurement <- as.factor(ifelse((trimws(as.character(dt7$measurement))==trimws(\"NA\")),NA,as.character(dt7$measurement)))\n\n\n# Here is the structure of the input data frame:\nstr(dt7)                            \nattach(dt7)                            \n# The analyses below are basic descriptions of the variables. After testing, they should be replaced.                 \n                # Get more details on character variables\n                 \ndetach(dt7)   \n\nco2flux_df <- dt7\n```\n:::\n\n\n# Cleaning + preparing for analysis üßº\n\nAligning data with the some datetime specifications\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\n#-------------------co2 data cleaning--------------------#\n#Convert the date time using lubridate with co2 data \nco2flux_df$datetime = as_datetime(co2flux_df$datetime)\n\n# Create a datetime column using lubridate\nco2flux_df$datetime <- ymd(paste(co2flux_df$year, co2flux_df$month, co2flux_df$day, sep = \"-\")) + hm(co2flux_df$time)\nco2flux_df$date <-  date(co2flux_df$datetime)\n\n#------------------soil temp data cleaning--------------#\n\n#Convert the date time using lubridate with temperature data \nsoiltemp_df$datetime <- as_datetime(soiltemp_df$datetime)\n# Extract day, month, and year\nday <- sprintf(\"%02d\", day(soiltemp_df$datetime))\nmonth <- sprintf(\"%02d\", month(soiltemp_df$datetime))\nyear <- year(soiltemp_df$datetime)\nsoiltemp_df$date <- paste(year, month, day, sep = '-')\n```\n:::\n\n\nBecause the soiltemp records temperature at individual plots, we also want to average all the plots by date and across all plots\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\n# Specify columns to average across\ncolumns_to_average <- c(\"p1.av\", \"p2.av\", \"p3.av\", \"p4.av\", \"p5.av\", \"p6.av\", \"p7.av\", \"p8.av\", \"p9.av\", \"p10.av\")\n\n# Calculate the row-wise mean for the selected columns\nsoiltemp_df <- soiltemp_df %>%\n  rowwise() %>%\n  mutate(treatment.avgT = mean(c_across(all_of(columns_to_average)), na.rm = TRUE)) %>% \n  rename(ctrl.avgT=ctrl.av) %>% \n  select(-p1.av, -p2.av, -p3.av, -p4.av, -p5.av, -p6.av, -p7.av, -p8.av, -p9.av, -p10.av, -doy, -year, -time) %>%  #drop columns \n  select(date, ctrl.avgT, treatment.avgT) #reorder columns\n```\n:::\n\n\nGroup by and average both data frames by to get a daily average.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#co2flux_df \n#soiltemp_df\n\n#group by date and average \nsoiltemp_df_avgs <- soiltemp_df %>% \n  group_by(date) %>% \n  summarise(treatment.avgT_daily = mean(treatment.avgT), ctrl.avgT_daily= mean(ctrl.avgT))\n\nco2flux <- co2flux_df %>% select(\"datetime\", \"treatment\", \"co2\", \"moisture\", \"date\") %>% filter(treatment == \"H\" | treatment == \"C\") \nco2flux_avgs <- co2flux %>%  group_by(date, treatment) %>% \n  summarise(avg_co2 = mean(co2), avg_moisture = mean(moisture)) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n\n## Exploratory Data Visualizations üëÄ\n\nI plot the raw carbon flux data over time to gain a better understanding of the underlying dataset, hoping to visually identify trends and notice patterns upon first assessment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw <- ggplot(data=co2flux, aes(x=date, y=co2, color = treatment)) + geom_point(alpha = 0.3)  +\n    xlab(\"Date\") + \n    ylab(\"CO2 flux, Œºmol/(m¬≤¬∑s) \")  + \n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y-%m-%d\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n:::\n\n\n![](images/Screenshot%202023-12-15%20at%2012.42.31%20PM.png)\n\nNotice the periodic gaps in the winter. After doing some research, I found that no samples were taken due to snow pack. This gap in observations is likely to cause biases in our data, as it omits a key season in our dataset. Due to these gaps, it is difficult to perform a time series analysis & decompose seasonality effects.\n\nNow some box plots and violin plots to observe the distribution of the soil data averaged daily by treatment type, without the time component.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbox_vio <- ggplot(data=co2flux_avgs, aes(x = treatment, y = avg_co2, col = treatment)) + geom_violin()+ geom_boxplot(width=0.5) + \n    xlab(\"Plot type\") + \n    ylab(\"CO2 flux, Œºmol/(m¬≤¬∑s) \")  \n```\n:::\n\n\n![](images/Screenshot%202023-12-15%20at%201.34.36%20PM.png)\n\nThe box-violin plot reveals that our data is a little bit right skewed, but mostly normal. \n\nJoining soil temperature and moisture data to the co2flux daily averages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#soiltemp_df at this point is the dataframe of averaged plot temperatures (averaging across all treatment plots)\nsoiltemp_df_avgs <- soiltemp_df_avgs %>% rename( \"C\" = ctrl.avgT_daily, \"H\" = treatment.avgT_daily)\nsoiltemp_df_avgs <- soiltemp_df_avgs %>% reshape2::melt(id = \"date\") \nsoiltemp_df_avgs <- soiltemp_df_avgs %>% rename(treatment = variable)\n\n#joining the two datasets by treatment and date \nresult <- merge(co2flux_avgs, soiltemp_df_avgs, by= c(\"date\", \"treatment\"))\nresult <- result %>% rename(avg_temp = value)\nresult$month <- format(result$date, \"%m\")\nresult$year <- format(result$date, \"%Y\")\ndaily_avgs <- result \n\nhead(daily_avgs, 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        date treatment  avg_co2 avg_moisture avg_temp month year\n1 2003-06-10         C 127.8928           NA  13.7900    06 2003\n2 2003-06-10         H 205.8222           NA  18.4245    06 2003\n3 2003-07-15         C 189.5994    0.2834956  16.9050    07 2003\n4 2003-07-15         H 211.0739    0.2039870  21.9360    07 2003\n5 2003-08-11         C 273.7239    0.2994390  20.3925    08 2003\n6 2003-08-11         H 293.6311    0.2518817  23.2730    08 2003\n```\n:::\n:::\n\n\n### Averaging by month or year?\n\n\nWhile taking averages over time will be necessary, it is important to consider which time scale will be most appropriate. While yearly averages are most accurate in terms of smoothing out seasonal variability, the trade-off is the small sample size. Taking monthly averages, on the other-hand, will give a larger sample to work with at the manageable cost of higher variability. We first group data by month and average, then plot.\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\n#grouping data by month\nmonthly_avgs <- daily_avgs %>% group_by(year, month, treatment) %>%  summarise(avg_co2_mo = mean(avg_co2), avg_moisture_mo = mean(avg_moisture),  avg_temp_mo = mean(avg_temp)) \n\nmonthly_avgs$datetime <- ym(paste(monthly_avgs$year, monthly_avgs$month, sep = \"-\"))\n\n\n#plotting distribution \nggplot(data=monthly_avgs, aes(x = treatment, y = avg_co2_mo, color = treatment)) + geom_boxplot() +  \n    xlab(\"treatment type\") + \n    ylab(\"CO2 flux, Œºmol/(m¬≤¬∑s) \")  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 22 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](barre_woods_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nAlternatively, grouping by year:\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nyearly_avgs <- daily_avgs %>% group_by(year, treatment) %>%  summarise(avg_co2_yr = mean(avg_co2), avg_moisture_yr = mean(avg_moisture),  avg_temp_yr = mean(avg_temp)) \n\n\nggplot(data=yearly_avgs, aes(x = treatment, y = avg_co2_yr, color = treatment)) + geom_boxplot() +  geom_point() +\n    xlab(\"treatment type\") + \n    ylab(\"CO2 flux, Œºmol/(m¬≤¬∑s) \")  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](barre_woods_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n# Analysis\n\n## Evaluating significant differences in average CO2 flux between treatment and control plots\n\n\nThe plots above give an intuitive idea about how yearly vs. monthly averaging affects the distribution of the dataset, so let's test it using regression.\n\n***Single variable, categorical model for yearly averaging***\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsingle_ct_lm <- lm (avg_co2_yr ~ treatment, data = yearly_avgs)\nsummary(single_ct_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = avg_co2_yr ~ treatment, data = yearly_avgs)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-35.859 -12.519  -2.844  12.175  47.812 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 137.5018     5.9234  23.213   <2e-16 ***\ntreatmentH    0.7497     8.3769   0.089    0.929    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 20.52 on 22 degrees of freedom\n  (10 observations deleted due to missingness)\nMultiple R-squared:  0.0003639,\tAdjusted R-squared:  -0.04507 \nF-statistic: 0.008009 on 1 and 22 DF,  p-value: 0.9295\n```\n:::\n:::\n\n\nThe results of an adjusted $R^2  = -0.04507$ and $p = 0.9295$ (equivalent to that of a two tailed t-test) reveal that there was no significant change in carbon flux between heated and treated plots. There is likely still too much variability, due to factors such as seasons and soil conditions, to determine a significant effect of the treatment. Let's repeat this with monthly average data.\n\n***Single variable, categorical model for monthly averaging***\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsingle_ct_lm <- lm (avg_co2_mo ~ treatment, data = monthly_avgs)\nsummary(single_ct_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = avg_co2_mo ~ treatment, data = monthly_avgs)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-112.641  -49.185   -6.048   43.183  180.144 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  132.169      5.958  22.183   <2e-16 ***\ntreatmentH     5.064      8.426   0.601    0.548    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 62.2 on 216 degrees of freedom\n  (22 observations deleted due to missingness)\nMultiple R-squared:  0.00167,\tAdjusted R-squared:  -0.002952 \nF-statistic: 0.3612 on 1 and 216 DF,  p-value: 0.5485\n```\n:::\n:::\n\n\nAveraging by month yields better (albeit, still poor) $R^2$ and $p$ values. Yearly averaging reduces the seasonal variability and tells us the overall long term effect of temperature on carbon flux, while monthly averaging give us the option of considering the effects of seasonality on our data. For the purposes of finding a linear regression to describe the data, we will choose the dataset with variables averaged monthly and will run a single variable, categorical regression.\n\n# Defining a regression model\n\nOnce again, we will define a single variable categorical regression model with only monthly average data. We regress CO2 flux on treatment type.\n\n## Model 0) Single variable, categorical regression\n\nOur null hypothesis (what we aim to reject based on the results of the regression) is based on the possibility that heat treatment has no effect on mean monthly carbon flux as compared to a control plot. This is a good moment to define both our null and alternative hypotheses:\n\n-   **Null hypothesis:** there is no significant difference in mean monthly carbon flux between control and heat-applied (treatment) plots.\n\n-   **Alternative hypothesis:** there is a significant difference in mean monthly carbon flux between control and heat-applied (treatment) plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_0 <- lm(avg_co2_mo ~ treatment, data = monthly_avgs)\n\nmodel_0_plt <- ggplot(monthly_avgs, aes(y = avg_co2_mo, x = treatment, color = treatment)) +\ngeom_point(alpha = 0.5) +\ngeom_categorical_model() +\n    xlab(\"treatment type\") + \n    ylab(\"CO2 flux, Œºmol/(m¬≤¬∑s) \")  \n```\n:::\n\n\n![](images/Screenshot%202023-12-15%20at%202.25.58%20PM.png){width=\"455\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summary(model_0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = avg_co2_mo ~ treatment, data = monthly_avgs)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-112.641  -49.185   -6.048   43.183  180.144 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  132.169      5.958  22.183   <2e-16 ***\ntreatmentH     5.064      8.426   0.601    0.548    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 62.2 on 216 degrees of freedom\n  (22 observations deleted due to missingness)\nMultiple R-squared:  0.00167,\tAdjusted R-squared:  -0.002952 \nF-statistic: 0.3612 on 1 and 216 DF,  p-value: 0.5485\n```\n:::\n:::\n\n\n![](images/Screenshot%202023-12-15%20at%2012.58.52%20PM.png){width=\"432\"}\n\nIn summary, this single variable, categorical regression model regressing monthly carbon flux on treatment type reveals:\n\n-   ....a p-value of 0.548, suggesting that there is not enough evidence to conclude that there is a significant relationship between treatment type and carbon flux.\n\n-   .... an adjusted R-squared of -0.0029, suggesting that the model, with treatment type as the predictor, is not explaining much of the variability in carbon flux, and the model may not be a good fit.\n\n-   .... that the application of 5 degrees Celsius of heat increases the carbon flux by $5 \\dfrac{umol CO_2}{m^2 * s}$.\n\n## Model 1) multiple regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#model_1\nmodel_1 <- lm(avg_co2_mo ~ treatment + month + avg_temp_mo + avg_moisture_mo , data = monthly_avgs)\nsummary(model_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = avg_co2_mo ~ treatment + month + avg_temp_mo + avg_moisture_mo, \n    data = monthly_avgs)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-81.959 -14.531  -0.398  15.906  76.790 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      -81.079     14.286  -5.676 5.07e-08 ***\ntreatmentH       -37.591      6.846  -5.491 1.26e-07 ***\nmonth05            1.304     10.100   0.129   0.8974    \nmonth06           22.984     12.075   1.904   0.0585 .  \nmonth07           45.680     14.909   3.064   0.0025 ** \nmonth08           32.498     14.498   2.241   0.0261 *  \nmonth09            8.089     12.809   0.632   0.5285    \nmonth10           13.177      9.031   1.459   0.1462    \nmonth11           20.416      9.011   2.266   0.0246 *  \nmonth12           42.505     21.701   1.959   0.0516 .  \navg_temp_mo       10.744      1.121   9.585  < 2e-16 ***\navg_moisture_mo  210.278     32.260   6.518 6.18e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 27.91 on 191 degrees of freedom\n  (37 observations deleted due to missingness)\nMultiple R-squared:  0.8086,\tAdjusted R-squared:  0.7975 \nF-statistic: 73.34 on 11 and 191 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nThis multiple variable regression model regressing the average monthly carbon flux on treatment type, month, average monthly temperature, and average moisture reveals:\n\n-   .... a p-value of $< 2.2*10^{-16}$, suggesting that there is enough evidence to conclude that there is a significant relationship between carbon flux and the regressed variables.\n\n-   .... an adjusted R-squared of 0.79, suggesting that the model, with treatment type as the predictor, is explaining much (79.75) of the variability in carbon flux, and the model may be a good fit!\n\n-   .... that treatment, three months, average monthly temperature, and average monthly moisture are variables that contribute significantly (p $< 0.05$) to the model.\n\n## Addressing ommited variables bias\n\nBefore we move on, we need to consider the possibility of omitted variables, so as to avoid omitted variable bias.\n\nMy guess is that there exists dependency between moisture and temperature. Let's plot moisture and temperature to see if there's a possibility of dependency between them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create scatter plot with line of best fit\novb <- ggplot(monthly_avgs, aes(x=avg_temp_mo, y=avg_moisture_mo)) +\n    geom_point(alpha = 0.4) +\n    geom_smooth(method='lm', se=TRUE, color = \"coral\")\n```\n:::\n\n\n![](images/Screenshot%202023-12-15%20at%201.14.28%20PM.png){width=\"516\"}\n\nFrom this graph, we can see that there is most likely a negative relationship between temperature and moisture. Our second iteration of the model will take these factors into consideration\n\n## Model 2) multiple regression with interaction term\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_2 <- lm(avg_co2_mo ~ treatment + month + avg_temp_mo + avg_moisture_mo + avg_temp_mo:avg_moisture_mo, data = monthly_avgs)\nsummary(model_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = avg_co2_mo ~ treatment + month + avg_temp_mo + avg_moisture_mo + \n    avg_temp_mo:avg_moisture_mo, data = monthly_avgs)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-73.18 -15.94  -1.74  17.78  71.78 \n\nCoefficients:\n                            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                    3.698     24.609   0.150 0.880703    \ntreatmentH                   -37.063      6.574  -5.638 6.16e-08 ***\nmonth05                       -3.264      9.759  -0.334 0.738417    \nmonth06                       17.091     11.679   1.463 0.145019    \nmonth07                       42.181     14.339   2.942 0.003669 ** \nmonth08                       30.328     13.929   2.177 0.030696 *  \nmonth09                        4.189     12.334   0.340 0.734514    \nmonth10                        6.302      8.827   0.714 0.476147    \nmonth11                       19.382      8.655   2.240 0.026279 *  \nmonth12                       20.599     21.493   0.958 0.339071    \navg_temp_mo                    5.877      1.592   3.691 0.000291 ***\navg_moisture_mo             -134.063     88.584  -1.513 0.131838    \navg_temp_mo:avg_moisture_mo   21.593      5.204   4.149 5.03e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.79 on 190 degrees of freedom\n  (37 observations deleted due to missingness)\nMultiple R-squared:  0.8245,\tAdjusted R-squared:  0.8134 \nF-statistic: 74.37 on 12 and 190 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nWith an adjusted $R^2 =  0.8134$, and a p-value of $< 2.2 * 10^{-16}$, this model is looking pretty good! Coefficients that are significant are: treatment type, three months of the year, average monthly temperature, and the interaction between average monthly moisture and average monthly temperature. We see that when all independent variables are equal, the average monthly carbon flux on the control plot is $3.69 \\dfrac{umol CO_2}{m^2 * s}$.\n\nBreaking this down, we can say that this model explains 81.34% of the variation in carbon flux, and that there is an almost zero probability that the observed carbon flux data occurred by random chance alone, assuming the null hypothesis is true. However, this model simultaneously suggests that the addition of treatment reduces the average carbon flux by $ -37  \\dfrac{umol CO_2}{m^2 * s}$. This value being negative is a little counter-intuitive, since in our single variable, categorical model demonstrates an overall positive effect. This suggests that the addition of more variables may explain our model better mathematically, but more work needs to be done to evaluate the scientific robustness of this model.\n\n## Limitations + next steps\n\nThis statistical analysis was limited by a variety of factors, including periodic sampling gaps during the winter months, which accounts for a quarter of the year. These gaps significantly introduced biases into our results. To adjust for this bias, the study by Dr. Jerry Melillo et Al. fills in the gaps by leveraging a model that estimates carbon flux based on sampled ambient air temperature. Unfortunately, the scope of this project did not encompass statistical data modeling. Due to these gaps, I was unable to perform a time series analysis that would have helped decompose seasonality effects in the data. It would be interesting to perform such a process to see what difference including winter data could bring. Additionally, I would be interested to incorporate more parameters into the model, such as nitrogen availability, leaf-litter composition, and plant-root density.\n\n## References\n\n\\[[1](https://www.wri.org/insights/ipcc-climate-report)\\] Levin, K. (August 9, 2021). IPCC's 2021 Climate Report. World Resources Institute. Accessed December 15, 2023. URL: https://www.wri.org/insights/ipcc-climate-report\n\n\\[[2](https://portal.edirepository.org/nis/metadataviewer?packageid=knb-lter-hfr.18.34)\\] EDI Data Package Summary: Barre Woods Soil Warming Experiment at Harvard Forest since 2001. Retrieved from: https://portal.edirepository.org/nis/mapbrowse?packageid=knb-lter-hfr.18.34\n\n\\[[3](https://harvardforest.fas.harvard.edu/news/results-20-year-soil-warming-experiment)\\] Potier, B. (2013). Warmer Soils Release More CO2 to Atmosphere; Effect Stabilizes Over Long Term. Retrieved:https://harvardforest.fas.harvard.edu/sites/default/files/Harvard%20Forest_Frey_Nature%20Climate%20Change_press%20release%202013.pdf\n\n\\[[4](https://harvardforest.fas.harvard.edu/soil-warming-experiment)\\] Soil Warming Experiments, Harvard Forest. Accessed Dec 10, 2023. URL: https://harvardforest.fas.harvard.edu/soil-warming-experiment\n\n\\[5\\] Frey, S. and J. Melillo. 2023. Barre Woods Soil Warming Experiment at Harvard Forest since 2001 ver 34. Environmental Data Initiative. https://doi.org/10.6073/pasta/9e34836122d20a123ff2c38d95527e28 (Accessed 2023-12-15).\n\n\\[6\\] Melillo, Jerry et Al. Soil warming, carbon--nitrogen interactions, and forest carbon budgets. PNAS Vol. 108, Volume 23. Published May 23, 2011.\n",
    "supporting": [
      "barre_woods_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}